// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/baidubce/baiducloud-cce-csi-driver/pkg/cloud (interfaces: MetaDataService)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMetaDataService is a mock of MetaDataService interface
type MockMetaDataService struct {
	ctrl     *gomock.Controller
	recorder *MockMetaDataServiceMockRecorder
}

// MockMetaDataServiceMockRecorder is the mock recorder for MockMetaDataService
type MockMetaDataServiceMockRecorder struct {
	mock *MockMetaDataService
}

// NewMockMetaDataService creates a new mock instance
func NewMockMetaDataService(ctrl *gomock.Controller) *MockMetaDataService {
	mock := &MockMetaDataService{ctrl: ctrl}
	mock.recorder = &MockMetaDataServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMetaDataService) EXPECT() *MockMetaDataServiceMockRecorder {
	return m.recorder
}

// InstanceID mocks base method
func (m *MockMetaDataService) InstanceID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InstanceID")
	ret0, _ := ret[0].(string)
	return ret0
}

// InstanceID indicates an expected call of InstanceID
func (mr *MockMetaDataServiceMockRecorder) InstanceID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InstanceID", reflect.TypeOf((*MockMetaDataService)(nil).InstanceID))
}

// Zone mocks base method
func (m *MockMetaDataService) Zone() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Zone")
	ret0, _ := ret[0].(string)
	return ret0
}

// Zone indicates an expected call of Zone
func (mr *MockMetaDataServiceMockRecorder) Zone() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Zone", reflect.TypeOf((*MockMetaDataService)(nil).Zone))
}
