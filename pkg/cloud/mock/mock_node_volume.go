// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/baidubce/baiducloud-cce-csi-driver/pkg/cloud (interfaces: NodeService)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	cloud "github.com/baidubce/baiducloud-cce-csi-driver/pkg/cloud"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockNodeService is a mock of NodeService interface
type MockNodeService struct {
	ctrl     *gomock.Controller
	recorder *MockNodeServiceMockRecorder
}

// MockNodeServiceMockRecorder is the mock recorder for MockNodeService
type MockNodeServiceMockRecorder struct {
	mock *MockNodeService
}

// NewMockNodeService creates a new mock instance
func NewMockNodeService(ctrl *gomock.Controller) *MockNodeService {
	mock := &MockNodeService{ctrl: ctrl}
	mock.recorder = &MockNodeServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNodeService) EXPECT() *MockNodeServiceMockRecorder {
	return m.recorder
}

// GetNodeByID mocks base method
func (m *MockNodeService) GetNodeByID(arg0 context.Context, arg1 string, arg2 cloud.Auth) (cloud.Node, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNodeByID", arg0, arg1, arg2)
	ret0, _ := ret[0].(cloud.Node)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNodeByID indicates an expected call of GetNodeByID
func (mr *MockNodeServiceMockRecorder) GetNodeByID(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNodeByID", reflect.TypeOf((*MockNodeService)(nil).GetNodeByID), arg0, arg1, arg2)
}
